#Область Общение_с_Пользователями
//Связка методов и форм работающих, с минимальными доработками,
//как в режиме с поддержкой модальности, так и без.
//На старых версиях платформы умеющих в описание оповещений и не умеющих

Процедура ОтобразитьПредупреждение(Текст,ФормаВладелец,ТранзитныеПараметры = Неопределено) ЭКСПОРТ
		
	Если ТипЗнч(ТранзитныеПараметры) <> Тип("Структура") Тогда
		ТранзитныеПараметры = новый Структура;
	КонецЕсли;
	
	ВыводитьСообщением = ?(ТранзитныеПараметры.Свойство("ВыводитьСообщением",ВыводитьСообщением),ВыводитьСообщением,Ложь);
	Если ВыводитьСообщением Тогда
		//@skip-check use-non-recommended-method
		Сообщить(Текст);
		Возврат;
	КонецЕсли;
	
	ТранзитныеПараметры.Вставить("ФормаВладелец",ФормаВладелец);
	
	ЗаголовокФормы = ?(ТранзитныеПараметры.Свойство("ЗаголовокФормы",ЗаголовокФормы),ЗаголовокФормы,"Предупреждение");
	РежимОткрытияПредупреждения = ?(ТранзитныеПараметры.Свойство("РежимОткрытияПредупреждения",РежимОткрытияПредупреждения),РежимОткрытияПредупреждения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТекстПредупреждения",Текст);
	ПараметрыОткрытия.Вставить("ЗаголовокФормы",ЗаголовокФормы);
	
	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗакрытиеПредупреждения",ЭтотОбъект,ТранзитныеПараметры);
	#Если МобильныйКлиент Тогда
		ОтобразитьПредупреждение("Мобильная версия не готова",ФормаВладелец);
	#Иначе
		ОткрытьФорму("ОбщаяФорма.Kiur_ФормаПредупреждения",ПараметрыОткрытия,ФормаВладелец,,,,ОповещениеЗакрытия,РежимОткрытияПредупреждения);
	#КонецЕсли 
			
	//Для версий платформы без описания оповещения, с использованием модальности:
	//РезультатЗакрытия = ОткрытьФормуМодально("ОбщаяФорма.ФормаПредупреждения",ПараметрыОткрытия,ФормаВладелец);
	//ЗакрытиеПредупреждения(РезультатЗакрытия,ТранзитныеПараметры);	
КонецПроцедуры

Процедура ЗакрытиеПредупреждения(РезультатЗакрытия,ТранзитныеПараметры) ЭКСПОРТ
	ФормаВладелец = ТранзитныеПараметры.ФормаВладелец;
	ФормаВладелец.Активизировать();
	
	ВызовДействияИзФормыВладельца = ?(ТранзитныеПараметры.Свойство("ВызовДействияИзФормыВладельца",ВызовДействияИзФормыВладельца),ВызовДействияИзФормыВладельца,Истина); 
	ДопДействие = ?(ТранзитныеПараметры.Свойство("ДопДействие",ДопДействие),ДопДействие,"");
	
	Если ЗначениеЗаполнено(ДопДействие) Тогда
		Если ВызовДействияИзФормыВладельца Тогда
			Выполнить("ФормаВладелец." + ДопДействие);	
		Иначе
			Выполнить(ДопДействие);	
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

//@skip-check redundant-export-method
Функция ПолучитьСтруктуруТранзитныхПараметровФормыПредупреждения(Знач СтруктураПараметров = Неопределено) ЭКСПОРТ
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		СтруктураПараметров = новый Структура;	
	КонецЕсли;	
	
	ТранзитныеПараметры = новый Структура;  
	
	ТранзитныеПараметры.Вставить("ВыводитьСообщением",Ложь);
	ТранзитныеПараметры.Вставить("ВызовДействияИзФормыВладельца",Истина);
	ТранзитныеПараметры.Вставить("ДопДействие","");
	ТранзитныеПараметры.Вставить("ЗаголовокФормы","Предупреждение");
	ТранзитныеПараметры.Вставить("РежимОткрытияПредупреждения",РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	Для Каждого Параметр из СтруктураПараметров Цикл
		ТранзитныеПараметры.Вставить(Параметр.Ключ,Параметр.Значение);	
	КонецЦикла;	
	
	Возврат ТранзитныеПараметры;	
КонецФункции


//@skip-check redundant-export-method
Процедура ОтобразитьВопрос(ТекстВопроса,ФормаВладелец,ТранзитныеПараметры) ЭКСПОРТ
	
	ЗаголовокФормы = ?(ТранзитныеПараметры.Свойство("ЗаголовокФормы",ЗаголовокФормы),ЗаголовокФормы,"Вопрос"); 
	КнопкаПоУмолчаниюНет = ?(ТранзитныеПараметры.Свойство("КнопкаПоУмолчаниюНет",КнопкаПоУмолчаниюНет),КнопкаПоУмолчаниюНет,Истина);
	РежимОткрытияВопроса = ?(ТранзитныеПараметры.Свойство("РежимОткрытияВопроса",РежимОткрытияВопроса),РежимОткрытияВопроса,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
    ПараметрыОткрытия = новый Структура;
	ПараметрыОткрытия.Вставить("ЗаголовокФормы",ЗаголовокФормы);
	ПараметрыОткрытия.Вставить("ТекстВопроса",ТекстВопроса);
	ПараметрыОткрытия.Вставить("КнопкаПоУмолчаниюНет",КнопкаПоУмолчаниюНет);
	
	ТранзитныеПараметры.Вставить("ФормаВладелец",ФормаВладелец);

	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗакрытиеВопроса",ЭтотОбъект,ТранзитныеПараметры);
	#Если МобильныйКлиент Тогда
		ОтобразитьПредупреждение("Мобильная версия не готова",ФормаВладелец);
	#Иначе
		ОткрытьФорму("ОбщаяФорма.Kiur_ФормаВопроса",ПараметрыОткрытия,ФормаВладелец,,,,ОповещениеЗакрытия,РежимОткрытияВопроса);
	#КонецЕсли 
			
	//Для версий платформы без описания оповещения, с использованием модальности:
	//ОтветНаВопрос = ОткрытьФормуМодально("ОбщаяФорма.ФормаВопроса",ПараметрыОткрытия,ФормаВладелец);
	//ЗакрытиеВопроса(ОтветНаВопрос,ТранзитныеПараметры);
КонецПроцедуры	

Процедура ЗакрытиеВопроса(ОтветНаВопрос,ТранзитныеПараметры) ЭКСПОРТ
	ФормаВладелец = ТранзитныеПараметры.ФормаВладелец;
	ФормаВладелец.Активизировать();
	
	ВызовДействияИзФормыВладельца = ?(ТранзитныеПараметры.Свойство("ВызовДействияИзФормыВладельца",ВызовДействияИзФормыВладельца),ВызовДействияИзФормыВладельца,Истина);
	ДопДействиеДа = ?(ТранзитныеПараметры.Свойство("ДопДействиеДа",ДопДействиеДа),ДопДействиеДа,"");
	ДопДействиеНет = ?(ТранзитныеПараметры.Свойство("ДопДействиеНет",ДопДействиеНет),ДопДействиеНет,"");
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да И ЗначениеЗаполнено(ДопДействиеДа) Тогда
		Если ВызовДействияИзФормыВладельца Тогда
			Выполнить("ФормаВладелец." + ДопДействиеДа);
		Иначе
			Выполнить(ДопДействиеДа);
		КонецЕсли;	
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет И ЗначениеЗаполнено(ДопДействиеНет) Тогда
		Если ВызовДействияИзФормыВладельца Тогда
			Выполнить("ФормаВладелец." + ДопДействиеНет);
		Иначе
			Выполнить(ДопДействиеНет);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

//@skip-check redundant-export-method
Функция ПолучитьСтруктуруТранзитныхПараметровФормыВопроса(Знач СтруктураПараметров = Неопределено) ЭКСПОРТ
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		СтруктураПараметров = новый Структура;	
	КонецЕсли;	
	
	ТранзитныеПараметры = новый Структура;  
	
	ТранзитныеПараметры.Вставить("ЗаголовокФормы","Вопрос");
	ТранзитныеПараметры.Вставить("КнопкаПоУмолчаниюНет",Истина);
	ТранзитныеПараметры.Вставить("РежимОткрытияВопроса",РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	ТранзитныеПараметры.Вставить("ВызовДействияИзФормыВладельца",Истина);
	ТранзитныеПараметры.Вставить("ДопДействиеДа","");
	ТранзитныеПараметры.Вставить("ДопДействиеНет","");
	
	Для Каждого Параметр из СтруктураПараметров Цикл
		ТранзитныеПараметры.Вставить(Параметр.Ключ,Параметр.Значение);	
	КонецЦикла;	
	
	Возврат ТранзитныеПараметры; 
КонецФункции


Процедура ОтобразитьВыборЗначения(ФормаВладелец,ТранзитныеПараметры) ЭКСПОРТ
	//Поддерживаемы варианты:
	//1. Ввод произвольного значения переданного типа
	//2. Выбор из переданного списка значений
	//3. Выбор из переданной таблицы ДанныеФормыКоллекция
	//4. Выбор из результата переданного запроса
	
	ЗначениеВвода = ?(ТранзитныеПараметры.Свойство("ЗначениеВвода",ЗначениеВвода),ЗначениеВвода,"");
	ЗаголовокФормы = ?(ТранзитныеПараметры.Свойство("ЗаголовокФормы",ЗаголовокФормы),ЗаголовокФормы,"Укажите значение");
	ТекстНадписи = ?(ТранзитныеПараметры.Свойство("ТекстНадписи",ТекстНадписи),ТекстНадписи,"Укажите значение");	
	
	ТипЗначенияВвода = ?(ТранзитныеПараметры.Свойство("ТипЗначенияВвода",ТипЗначенияВвода),ТипЗначенияВвода,новый ОписаниеТипов("Строка"));
	
	СписокДоступныхЗначенийВыбора = ?(ТранзитныеПараметры.Свойство("СписокДоступныхЗначенийВыбора",СписокДоступныхЗначенийВыбора),СписокДоступныхЗначенийВыбора,Неопределено);
	РежимОткрытияВыбора = ?(ТранзитныеПараметры.Свойство("РежимОткрытияВыбора",РежимОткрытияВыбора),РежимОткрытияВыбора,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	ВыборИзТаблицы = ?(ТранзитныеПараметры.Свойство("ВыборИзТаблицы",ВыборИзТаблицы),ВыборИзТаблицы,Ложь);
	//Если передаем в форму таблицу/Запрос то там обязательно должна быть колонка "ЗначениеВыбора"
	ЗаголовокВыбираемогоПоля = ?(ТранзитныеПараметры.Свойство("ЗаголовокВыбираемогоПоля",ЗаголовокВыбираемогоПоля),ЗаголовокВыбираемогоПоля,"Наименование");
	ВернутьСтруктуруСтрокиТаблицы = ?(ТранзитныеПараметры.Свойство("ВернутьСтруктуруСтрокиТаблицы",ВернутьСтруктуруСтрокиТаблицы),ВернутьСтруктуруСтрокиТаблицы,Ложь); 
	ТаблицаДляВыбора = ?(ТранзитныеПараметры.Свойство("ТаблицаДляВыбора",ТаблицаДляВыбора),ТаблицаДляВыбора,Неопределено);
	СтруктураЗапроса = ?(ТранзитныеПараметры.Свойство("СтруктураЗапроса",СтруктураЗапроса),СтруктураЗапроса,новый Структура);
	
	ПараметрыОткрытия = новый Структура;
	ПараметрыОткрытия.Вставить("ЗначениеВвода",ЗначениеВвода);
	ПараметрыОткрытия.Вставить("ЗаголовокФормы",ЗаголовокФормы);
	ПараметрыОткрытия.Вставить("ТекстНадписи",ТекстНадписи);
	
	ПараметрыОткрытия.Вставить("ТипЗначенияВвода",ТипЗначенияВвода);
	
	ПараметрыОткрытия.Вставить("СписокДоступныхЗначенийВыбора",СписокДоступныхЗначенийВыбора);
	ПараметрыОткрытия.Вставить("РежимОткрытияВыбора",РежимОткрытияВыбора);
	
	ПараметрыОткрытия.Вставить("ВыборИзТаблицы",ВыборИзТаблицы);
	//Если передаем в форму таблицу/Запрос то там обязательно должна быть колонка "ЗначениеВыбора"
	ПараметрыОткрытия.Вставить("ЗаголовокВыбираемогоПоля",ЗаголовокВыбираемогоПоля);
	ПараметрыОткрытия.Вставить("ВернутьСтруктуруСтрокиТаблицы",ВернутьСтруктуруСтрокиТаблицы);
	ПараметрыОткрытия.Вставить("ТаблицаДляВыбора",ТаблицаДляВыбора);
	ПараметрыОткрытия.Вставить("СтруктураЗапроса",СтруктураЗапроса);
	
	ТранзитныеПараметры.Вставить("ФормаВладелец",ФормаВладелец);
	
	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗакрытиеВыбораЗначения",ЭтотОбъект,ТранзитныеПараметры);
	#Если МобильныйКлиент Тогда
		ОтобразитьПредупреждение("Мобильная версия не готова",ФормаВладелец);
	#Иначе
		ОткрытьФорму("ОбщаяФорма.Kiur_ФормаВыбораЗначения",ПараметрыОткрытия,ФормаВладелец,,,,ОповещениеЗакрытия,РежимОткрытияВыбора);
	#КонецЕсли 
			
	//Для версий платформы без описания оповещения, с использованием модальности:
	//РезультатВыбора = ОткрытьФормуМодально("ОбщаяФорма.ФормаПредупреждения",ПараметрыОткрытия,ФормаВладелец);
	//ЗакрытиеВыбораЗначения(РезультатВыбора,ТранзитныеПараметры);
КонецПроцедуры

Процедура ЗакрытиеВыбораЗначения(РезультатВыбора,ТранзитныеПараметры) ЭКСПОРТ
	ФормаВладелец = ТранзитныеПараметры.ФормаВладелец;
	ФормаВладелец.Активизировать();
	
	ВызовДействияИзФормыВладельца = ?(ТранзитныеПараметры.Свойство("ВызовДействияИзФормыВладельца",ВызовДействияИзФормыВладельца),ВызовДействияИзФормыВладельца,Истина); 
	ДопДействие = ?(ТранзитныеПараметры.Свойство("ДопДействие",ДопДействие),ДопДействие,"");
	
	Если ЗначениеЗаполнено(ДопДействие) Тогда
		Если ВызовДействияИзФормыВладельца Тогда
			Выполнить("ФормаВладелец." + ДопДействие);	
		Иначе
			Выполнить(ДопДействие);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруТранзитныхПараметровФормыВыбора(Знач СтруктураПараметров = Неопределено) ЭКСПОРТ
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		СтруктураПараметров = новый Структура;	
	КонецЕсли;
	
	ТекстЗапроса = ?(СтруктураПараметров.Свойство("ТекстЗапроса",ТекстЗапроса),ТекстЗапроса,"");
	СтруктураПараметровЗапроса = ?(СтруктураПараметров.Свойство("СтруктураПараметровЗапроса",СтруктураПараметровЗапроса),СтруктураПараметровЗапроса,новый Структура);	
	СтруктураЗаменяемыхЗначений = ?(СтруктураПараметров.Свойство("СтруктураЗаменяемыхЗначений",СтруктураЗаменяемыхЗначений),СтруктураЗаменяемыхЗначений,новый Структура);	
	
	СтруктураЗапроса = ?(СтруктураПараметров.Свойство("СтруктураЗапроса",СтруктураЗапроса),СтруктураЗапроса,Неопределено);
	Если ТипЗнч(СтруктураЗапроса) <> Тип("Структура") Тогда
		СтруктураЗапроса = новый Структура;
		СтруктураЗапроса.Вставить("ТекстЗапроса",ТекстЗапроса);
		СтруктураЗапроса.Вставить("СтруктураПараметровЗапроса",СтруктураПараметровЗапроса);
		СтруктураЗапроса.Вставить("СтруктураЗаменяемыхЗначений",СтруктураЗаменяемыхЗначений);
	КонецЕсли;	
	
	ТранзитныеПараметры = новый Структура;  	
	ТранзитныеПараметры.Вставить("ЗначениеВвода","");	
	ТранзитныеПараметры.Вставить("ЗаголовокФормы","Укажите значение");	
	ТранзитныеПараметры.Вставить("ТекстНадписи","Укажите значение");	
	ТранзитныеПараметры.Вставить("ТипЗначенияВвода",новый ОписаниеТипов("Строка"));
	
	ТранзитныеПараметры.Вставить("СписокДоступныхЗначенийВыбора",Неопределено);	
	
	ТранзитныеПараметры.Вставить("ВыборИзТаблицы",Ложь);
	//Если передаем в форму таблицу/Запрос то там обязательно должна быть колонка "ЗначениеВыбора"
	ТранзитныеПараметры.Вставить("ЗаголовокВыбираемогоПоля","Наименование");
	ТранзитныеПараметры.Вставить("ТаблицаДляВыбора",Неопределено);
	ТранзитныеПараметры.Вставить("ВернутьСтруктуруСтрокиТаблицы",Ложь);
	
	ТранзитныеПараметры.Вставить("СтруктураЗапроса",СтруктураЗапроса);	
	
	ТранзитныеПараметры.Вставить("РежимОткрытияВыбора",РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ТранзитныеПараметры.Вставить("ВызовДействияИзФормыВладельца",Истина);
	ТранзитныеПараметры.Вставить("ДопДействие","");
	
	Для Каждого Параметр из СтруктураПараметров Цикл
		ТранзитныеПараметры.Вставить(Параметр.Ключ,Параметр.Значение);	
	КонецЦикла;	
	
	Возврат ТранзитныеПараметры;	
КонецФункции


//@skip-check redundant-export-method
Процедура ОтобразитьТаблицу(ФормаВладелец,ТранзитныеПараметры) ЭКСПОРТ
	
	ТранзитныеПараметры.Вставить("ФормаВладелец",ФормаВладелец);
	
	ЗаголовокФормы = ?(ТранзитныеПараметры.Свойство("ЗаголовокФормы",ЗаголовокФормы),ЗаголовокФормы,"Предупреждение");
	РежимОткрытияТаблицы = ?(ТранзитныеПараметры.Свойство("РежимОткрытияТаблицы",РежимОткрытияТаблицы),РежимОткрытияТаблицы,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	РучнойВводЗапроса = ?(ТранзитныеПараметры.Свойство("РучнойВводЗапроса",РучнойВводЗапроса),РучнойВводЗапроса,Истина);
	СтруктураЗапроса = ?(ТранзитныеПараметры.Свойство("СтруктураЗапроса",СтруктураЗапроса),СтруктураЗапроса,новый Структура);
	ТаблицаДляОтображения = ?(ТранзитныеПараметры.Свойство("ТаблицаДляОтображения",ТаблицаДляОтображения),ТаблицаДляОтображения,Неопределено);
	
	ПараметрыОткрытия = Новый Структура;	
	ПараметрыОткрытия.Вставить("ЗаголовокФормы",ЗаголовокФормы);
	ПараметрыОткрытия.Вставить("РучнойВводЗапроса",РучнойВводЗапроса);
	ПараметрыОткрытия.Вставить("СтруктураЗапроса",СтруктураЗапроса);
	ПараметрыОткрытия.Вставить("ТаблицаДляОтображения",ТаблицаДляОтображения);
	
	
	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗакрытиеФормыТаблицы",ЭтотОбъект,ТранзитныеПараметры);
	#Если МобильныйКлиент Тогда
		ОтобразитьПредупреждение("Мобильная версия не готова",ФормаВладелец);
	#Иначе
		ОткрытьФорму("ОбщаяФорма.Kiur_ФормаВыводаПроизвольнойТаблицы",ПараметрыОткрытия,ФормаВладелец,,,,ОповещениеЗакрытия,РежимОткрытияТаблицы);
	#КонецЕсли 
			
	//Для версий платформы без описания оповещения, с использованием модальности:
	//ТаблицаДанных = ОткрытьФормуМодально("ОбщаяФорма.ФормаВыводаПроизвольнойТаблицы",ПараметрыОткрытия,ФормаВладелец);
	//ЗакрытиеФормыТаблицы(ТаблицаДанных,ТранзитныеПараметры);
КонецПроцедуры

Процедура ЗакрытиеФормыТаблицы(ТаблицаДанных,ТранзитныеПараметры) ЭКСПОРТ
	ФормаВладелец = ТранзитныеПараметры.ФормаВладелец;
	ФормаВладелец.Активизировать();
	
	ВызовДействияИзФормыВладельца = ?(ТранзитныеПараметры.Свойство("ВызовДействияИзФормыВладельца",ВызовДействияИзФормыВладельца),ВызовДействияИзФормыВладельца,Истина); 
	ДопДействие = ?(ТранзитныеПараметры.Свойство("ДопДействие",ДопДействие),ДопДействие,"");
	
	Если ЗначениеЗаполнено(ДопДействие) Тогда
		Если ВызовДействияИзФормыВладельца Тогда
			Выполнить("ФормаВладелец." + ДопДействие);	
		Иначе
			Выполнить(ДопДействие);	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//@skip-check redundant-export-method
Функция ПолучитьСтруктуруТранзитныхПараметровФормыТаблицы(Знач СтруктураПараметров = Неопределено) ЭКСПОРТ
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда
		СтруктураПараметров = новый Структура;	
	КонецЕсли;
	
	ТекстЗапроса = ?(СтруктураПараметров.Свойство("ТекстЗапроса",ТекстЗапроса),ТекстЗапроса,"");
	СтруктураПараметровЗапроса = ?(СтруктураПараметров.Свойство("СтруктураПараметровЗапроса",СтруктураПараметровЗапроса),СтруктураПараметровЗапроса,новый Структура);	
	СтруктураЗаменяемыхЗначений = ?(СтруктураПараметров.Свойство("СтруктураЗаменяемыхЗначений",СтруктураЗаменяемыхЗначений),СтруктураЗаменяемыхЗначений,новый Структура);	
	
	СтруктураЗапроса = ?(СтруктураПараметров.Свойство("СтруктураЗапроса",СтруктураЗапроса),СтруктураЗапроса,Неопределено);
	Если ТипЗнч(СтруктураЗапроса) <> Тип("Структура") Тогда
		СтруктураЗапроса = новый Структура;
		СтруктураЗапроса.Вставить("ТекстЗапроса",ТекстЗапроса);
		СтруктураЗапроса.Вставить("СтруктураПараметровЗапроса",СтруктураПараметровЗапроса);
		СтруктураЗапроса.Вставить("СтруктураЗаменяемыхЗначений",СтруктураЗаменяемыхЗначений);
	КонецЕсли;	
	
	ТранзитныеПараметры = новый Структура;  
	
	ТранзитныеПараметры.Вставить("ЗаголовокФормы","ОтображениеТаблицы");
	ТранзитныеПараметры.Вставить("РучнойВводЗапроса",Истина);
	ТранзитныеПараметры.Вставить("ТаблицаДляОтображения",Неопределено);
	ТранзитныеПараметры.Вставить("СтруктураЗапроса",СтруктураЗапроса); 
	
	ТранзитныеПараметры.Вставить("РежимОткрытияТаблицы",РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	ТранзитныеПараметры.Вставить("ВызовДействияИзФормыВладельца",Истина);
	ТранзитныеПараметры.Вставить("ДопДействие","");
	
	Для Каждого Параметр из СтруктураПараметров Цикл
		ТранзитныеПараметры.Вставить(Параметр.Ключ,Параметр.Значение);	
	КонецЦикла;	
	
	Возврат ТранзитныеПараметры;
	
КонецФункции

Процедура ОтобразитьДиалогВыбораФайла(ФиксированныеПараметры, МодифицируемыеПараметры) ЭКСПОРТ
	ОповещениеЗакрытияВыбораФайла = ФиксированныеПараметры.ОповещениеЗакрытияВыбораФайла;
	
	ПараметрыДиалогаВыбораФайла = ?(ФиксированныеПараметры.Свойство("ПараметрыДиалогаВыбораФайла",ПараметрыДиалогаВыбораФайла),ПараметрыДиалогаВыбораФайла,новый Структура);
	
	ДиалогВыбораФайла = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	
	Для Каждого Ключ_Значение из ПараметрыДиалогаВыбораФайла Цикл
		Если Ключ_Значение.Значение <> Неопределено Тогда
			ДиалогВыбораФайла[Ключ_Значение.Ключ] = Ключ_Значение.Значение;	
		КонецЕсли;	
	КонецЦикла;
	
	ДиалогВыбораФайла.Показать(ОповещениеЗакрытияВыбораФайла);
КонецПроцедуры

Процедура ОтобразитьДиалогСохраненияФайла(ФиксированныеПараметры, МодифицируемыеПараметры) ЭКСПОРТ
	ПараметрыДиалогаСохраненияФайла = ?(ФиксированныеПараметры.Свойство("ПараметрыДиалогаСохраненияФайла",ПараметрыДиалогаСохраненияФайла),ПараметрыДиалогаСохраненияФайла,новый Структура);
	ОповещениеЗакрытияВыбораМестаСохранения = ?(ФиксированныеПараметры.Свойство("ОповещениеЗакрытияВыбораМестаСохранения",ОповещениеЗакрытияВыбораМестаСохранения),ОповещениеЗакрытияВыбораМестаСохранения,Неопределено);
	
	ДиалогСохраненияФайла = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);	
	
	Для Каждого Ключ_Значение из ПараметрыДиалогаСохраненияФайла Цикл
		Если Ключ_Значение.Значение <> Неопределено Тогда
			ДиалогСохраненияФайла[Ключ_Значение.Ключ] = Ключ_Значение.Значение;	
		КонецЕсли;	
	КонецЦикла;
	
	ТранзитныеПараметры = новый Структура;
	ТранзитныеПараметры.Вставить("ФиксированныеПараметры",ФиксированныеПараметры);
	ТранзитныеПараметры.Вставить("МодифицируемыеПараметры",МодифицируемыеПараметры);
	
	Если ОповещениеЗакрытияВыбораМестаСохранения = Неопределено Тогда
	    ОповещениеЗакрытияВыбораМестаСохранения = новый ОписаниеОповещения("ОтобразитьДиалогСохраненияФайла_ВыбраноМестоСохранения",ЭтотОбъект,ТранзитныеПараметры);
	КонецЕсли;	
	
	ДиалогСохраненияФайла.Показать(ОповещениеЗакрытияВыбораМестаСохранения);		
КонецПроцедуры

Процедура ОтобразитьДиалогСохраненияФайла_ВыбраноМестоСохранения(ВыбранныеФайлы, ТранзитныеПараметры) ЭКСПОРТ
	Если НЕ ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		Возврат;
	КонецЕсли; 
	
	ФиксированныеПараметры = ТранзитныеПараметры.ФиксированныеПараметры;
	МодифицируемыеПараметры = ТранзитныеПараметры.МодифицируемыеПараметры;	
	ФормаВладелец = ФиксированныеПараметры.ФормаВладелец;
	
	ЗаписываемыеДанные = ФиксированныеПараметры.ЗаписываемыеДанные;
	РасширениеФайлаДанных = ФиксированныеПараметры.РасширениеФайлаДанных;
	
	ПолноеИмяСохраняемогоФайла = ВыбранныеФайлы[0];	
		
	НеИзменяемыеПараметры = новый Структура;
	НеИзменяемыеПараметры.Вставить("ЗаписываемыеДанные",ЗаписываемыеДанные);
	НеИзменяемыеПараметры.Вставить("РасширениеФайлаДанных",РасширениеФайлаДанных);
	НеИзменяемыеПараметры.Вставить("ПолноеИмяСохраняемогоФайла",ПолноеИмяСохраняемогоФайла);
	НеИзменяемыеПараметры = новый ФиксированнаяСтруктура(НеИзменяемыеПараметры); 
	
	ИзменяемыеПараметры = новый Структура;

	Если КиурКлСрв.ДанныеЗаписаныВФайл(НеИзменяемыеПараметры, ИзменяемыеПараметры) Тогда
		ОтобразитьПредупреждение("Файл сохранен.",ФормаВладелец);
	Иначе
		СообщениеОшибки = ?(ИзменяемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		ОтобразитьПредупреждение("Не удалось сохранить файл, по причине:" + Символы.ПС + СообщениеОшибки,ФормаВладелец);
	КонецЕсли;
		
КонецПроцедуры



#КонецОбласти  


