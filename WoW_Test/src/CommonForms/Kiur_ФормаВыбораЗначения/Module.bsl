
/////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////Обработчики Событий Формы \\\\\\\\\\\\\\\\\\\\\\\\\\
//////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Заголовок = ?(Параметры.Свойство("ЗаголовокФормы",Заголовок),Заголовок,"Укажите значение");
	ВыборИзТаблицы = ?(Параметры.Свойство("ВыборИзТаблицы",ВыборИзТаблицы),ВыборИзТаблицы,Ложь);
	
	ТекстНадписи = ?(Параметры.Свойство("ТекстНадписи",ТекстНадписи),ТекстНадписи,"Укажите значение");
	Надпись = ТекстНадписи;
	
	Если ВыборИзТаблицы Тогда
		//Если передаем в форму таблицу/Запрос то там обязательно должна быть колонка "ЗначениеВыбора"
		ПереданнаяТаблица = ?(Параметры.Свойство("ТаблицаДляВыбора",ПереданнаяТаблица),ПереданнаяТаблица,Неопределено);
		СтруктураЗапроса = ?(Параметры.Свойство("СтруктураЗапроса",СтруктураЗапроса),СтруктураЗапроса,новый Структура);
		ЗаголовокВыбираемогоПоля = ?(Параметры.Свойство("ЗаголовокВыбираемогоПоля",ЗаголовокВыбираемогоПоля),ЗаголовокВыбираемогоПоля,"Наименование");
		ВернутьСтруктуруСтрокиТаблицы = ?(Параметры.Свойство("ВернутьСтруктуруСтрокиТаблицы",ВернутьСтруктуруСтрокиТаблицы),ВернутьСтруктуруСтрокиТаблицы,Ложь);
		Если ВернутьСтруктуруСтрокиТаблицы Тогда
			СтруктураДанныхВыбраннойСтроки = новый Структура;
		КонецЕсли;
		Элементы.ОК.Заголовок = "Выбрать";
		ОтобразитьТаблицуНаФорме(ПереданнаяТаблица,СтруктураЗапроса,ЗаголовокВыбираемогоПоля);
	Иначе
		ЗначениеВвода = ?(Параметры.Свойство("ЗначениеВвода",ЗначениеВвода),ЗначениеВвода,"");
		
		ТипЗначенияВвода = ?(Параметры.Свойство("ТипЗначенияВвода",ТипЗначенияВвода),ТипЗначенияВвода,новый ОписаниеТипов("Строка"));
		Элементы.ЗначениеВвода.ОграничениеТипа = ТипЗначенияВвода;		
		
		СписокДоступныхЗначенийВыбора = ?(Параметры.Свойство("СписокДоступныхЗначенийВыбора",СписокДоступныхЗначенийВыбора),СписокДоступныхЗначенийВыбора,Неопределено);
		Если СписокДоступныхЗначенийВыбора <> Неопределено Тогда
			Элементы.ЗначениеВвода.РежимВыбораИзСписка = Истина;
			Элементы.ЗначениеВвода.РедактированиеТекста = Ложь;
			Для каждого ЭлемСписка из СписокДоступныхЗначенийВыбора Цикл
				Элементы.ЗначениеВвода.СписокВыбора.Добавить(ЭлемСписка.Значение,ЭлемСписка.Представление);	
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.ОК;
	
	//@skip-check form-self-reference
	УстановкаВидимостиДоступности(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Активизировать();
КонецПроцедуры

#КонецОбласти


/////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////Обработчики Событий Команд\\\\\\\\\\\\\\\\\\\\\\\\\\
//////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область КомандыФормы

&НаКлиенте
Процедура ОК(Команда)
	Если ВыборИзТаблицы Тогда
		ТекущиеДанные = Элементы.ТаблицаДляВыбора.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТипЗнч(СтруктураДанныхВыбраннойСтроки) = Тип("Структура") Тогда
				ЗаполнитьЗначенияСвойств(СтруктураДанныхВыбраннойСтроки,ТекущиеДанные);
				Закрыть(СтруктураДанныхВыбраннойСтроки);
			Иначе	 
				Закрыть(ТекущиеДанные.ЗначениеВыбора);
			КонецЕсли;	
		Иначе
			//@skip-check form-self-reference
			КиурКл.ОтобразитьПредупреждение("Не указано значение в таблице выбора.",ЭтаФорма);
		КонецЕсли;	
	Иначе
		Закрыть(ЗначениеВвода);
	КонецЕсли;	
КонецПроцедуры


#КонецОбласти

/////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////Обработчики Событий Элементов\\\\\\\\\\\\\\\\\\\\\\\
//////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область ЭлементыФормы

&НаКлиенте
Процедура ТаблицаВыбораВыбор()
	ОК(Неопределено);	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//////////////////////////Служебные методы\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область Служебные

&НаКлиентеНаСервереБезКонтекста
Процедура УстановкаВидимостиДоступности(ФормаРеквизитов)
	Если ФормаРеквизитов.ВыборИзТаблицы Тогда
		ФормаРеквизитов.Элементы.ЗначениеВвода.Видимость = Ложь;
		ФормаРеквизитов.Элементы.ОК.Заголовок = "Выбрать";
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьТаблицуНаФорме(ПереданнаяТаблица,СтруктураЗапроса,ЗаголовокВыбираемогоПоля)
	
	Если ПереданнаяТаблица <> Неопределено Тогда
		ТаблицаЗначений = ПереданнаяТаблица.Выгрузить();
	Иначе
		РезультатЗапроса = КиурСрв.ПолучитьРезультатПроизвольногоТекстаЗапроса(СтруктураЗапроса.ТекстЗапроса,СтруктураЗапроса.СтруктураПараметровЗапроса,СтруктураЗапроса.СтруктураЗаменяемыхЗначений);
		ТаблицаЗначений = РезультатЗапроса.Выгрузить();
	КонецЕсли;	
	
	КолонкаВыбираемогоЗначения = ТаблицаЗначений.Колонки.Найти("ЗначениеВыбора");
	КолонкаВыбираемогоЗначения.Заголовок = ЗаголовокВыбираемогоПоля;
	
	КиурСрв.ДобавитьПроизвольнуюТаблицуНаФорму("ТаблицаДляВыбора",ЭтаФорма,ТаблицаЗначений);
	
	Если ТипЗнч(СтруктураДанныхВыбраннойСтроки) = Тип("Структура") Тогда
		Для каждого Колонка из ТаблицаЗначений.Колонки Цикл
			СтруктураДанныхВыбраннойСтроки.Вставить(Колонка.Имя, Неопределено);
		КонецЦикла;	
	КонецЕсли;	
	
	Элементы.ТаблицаДляВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	//@skip-check wrong-string-literal-content
	Элементы.ТаблицаДляВыбора.УстановитьДействие("Выбор","ТаблицаВыбораВыбор");
КонецПроцедуры




#КонецОбласти

///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////Для удаления\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

#Область ДляУдаления

#КонецОбласти

//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//////////////////////////////////////
//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\Для удаления/////////////////////////////
//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//////////////////////////////////////

